name: lint

on:
  push:
  pull_request:
  schedule:
    - cron: '34 17 * * *'

jobs:

  clang_format_check:

    runs-on: ubuntu-latest

    if: ${{ github.event_name != 'schedule' || (github.event_name == 'schedule' && vars.MMGH_NIGHTLY == 'enable') }}

    strategy:
      matrix:
        path:
          - 'cpp'
          - 'gtests'

    steps:

      - uses: actions/checkout@v2

      - name: event name
        run: |
          echo "github.event_name: ${{ github.event_name }}"

      - name: Run clang-format style check for C/C++/Protobuf programs.
        uses: jidicula/clang-format-action@v4.11.0
        with:
          clang-format-version: '16'
          check-path: ${{ matrix.path }}
          fallback-style: 'LLVM' # optional

  tidy_flake8_ubuntu:

    if: ${{ github.event_name != 'schedule' || (github.event_name == 'schedule' && vars.MMGH_NIGHTLY == 'enable') }}

    runs-on: ${{ matrix.os }}

    env:
      JOB_MAKE_ARGS: VERBOSE=1 BUILD_QT=ON USE_CLANG_TIDY=ON LINT_AS_ERRORS=ON
      QT_DEBUG_PLUGINS: 1
      QT_QPA_PLATFORM: offscreen
      # Fix issue: https://github.com/solvcon/modmesh/issues/366
      # Use custom config for jurplel/install-qt-action@v4
      AQT_CONFIG: "thirdparty/aqt_settings.ini"

    strategy:
        matrix:
          os: [ubuntu-22.04]
          cmake_build_type: [Debug]

        fail-fast: false

    steps:

    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: event name
      run: |
        echo "github.event_name: ${{ github.event_name }}"

    - name: dependency by apt
      run: |
        sudo apt-get -qy install python3 python3-dev python3-venv

    - name: dependency by pip
      run: |
        python3 -m pip -v install flake8

    - name: show dependency
      # Copy the commands from contrib/dependency/showdep.sh
      run: |
        echo "flake8 path: $(which flake8)"
        echo "flake8 version: $(flake8 --version)"

    - name: make flake8
      run: flake8

  tidy_flake8_macos:

    if: ${{ github.event_name != 'schedule' || (github.event_name == 'schedule' && vars.MMGH_NIGHTLY == 'enable') }}

    runs-on: ${{ matrix.os }}

    env:
      JOB_MAKE_ARGS: VERBOSE=1 BUILD_QT=ON USE_CLANG_TIDY=ON LINT_AS_ERRORS=ON
      QT_DEBUG_PLUGINS: 1
      PIP_BREAK_SYSTEM_PACKAGES: 1 # disabling PEP668
      # Fix issue: https://github.com/solvcon/modmesh/issues/366
      # Use custom config for jurplel/install-qt-action@v4
      AQT_CONFIG: "thirdparty/aqt_settings.ini"

    strategy:
      matrix:
        # https://github.com/actions/runner-images/blob/main/images/macos/macos-13-Readme.md
        # https://github.com/actions/runner-images/blob/main/images/macos/macos-14-arm64-Readme.md
        # 20240811: clang-tidy (llvm@16) runs extremely slowly on macos-14
        # (i.e., macos-14-arm64), but not macos-13. Temporarily turn off the
        # linter run on macos-14 and revisit in the future.
        #os: [macos-13, macos-14]
        os: [macos-13]
        cmake_build_type: [Debug]

      fail-fast: false

    steps:

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: event name
        run: |
          echo "github.event_name: ${{ github.event_name }}"
          # Some mac runner does not have /usr/local/include and cmake sometimes crashes
          sudo mkdir -p /usr/local/include

      - name: dependency by pip
        run: |
          echo "which python3: $(which python3)"
          ls -al $(which python3)
          # suppress the warning of pip because brew forces PEP668 since python3.12
          python3 -m pip -v install --upgrade setuptools --break-system-packages
          python3 -m pip -v install --upgrade pip --break-system-packages
          python3 -m pip -v install --upgrade flake8

      - name: show dependency
        # Copy the commands from contrib/dependency/showdep.sh
        run: |
          echo "flake8 path: $(which flake8)"
          echo "flake8 version: $(flake8 --version)"

      - name: make flake8
        run: flake8
